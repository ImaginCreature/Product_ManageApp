<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssg.productmanagement.mapper.ProductManagementMapper">
    <select id="getTime" resultType="string">
        select now()
    </select>

    <insert id="insert">
        insert into tbl_product_management (name, price, quantity) values (#{name}, #{price}, #{quantity})
    </insert>

    <select id="selectAll" resultType="com.ssg.productmanagement.domain.ProductVO">
        select * from tbl_product_management order by pno desc
    </select>

    <select id="selectOne" resultType="com.ssg.productmanagement.domain.ProductVO">
        select *
        from tbl_product_management
        where pno = #{pno}
    </select>

    <delete id="delete">
        delete from tbl_product_management where pno= #{pno}
    </delete>

    <update id="update">
        update tbl_product_management set name = #{name}, price = #{price}, quantity = #{quantity} where pno = #{pno}
    </update>

    <select id="selectList" resultType="com.ssg.productmanagement.domain.ProductVO">
        select * from tbl_product_management
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator="OR">
                    <if test="type=='t'.toString()">
                        name like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type=='w'.toString()">
                        price like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
        </where>
        order by pno desc limit #{skip}, #{size}
    </select>

    <select id="getCount" resultType="int">
        select count(*)
        from tbl_product_management
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=") " separator=" OR ">
                    <if test="type == 't'.toString()">
                        name like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        price like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
        </where>
    </select>
</mapper>